----------1Âº Criamos o repositÃ³rio no GitHub, e clonamos
ele localmente, para a criaÃ§Ã£o da API.

----------2Âº Criamos o package.json do projeto:
    npm init -y

----------3Âº Instalamos o JsonServer como dev dependence com o npm, a partir do repos
https://github.com/typicode/json-server Com o comando:
    npm i json-server -D

----------4Âº  Criamos/Adicionamos a dB em .json com os dados que iremos fazer
as requisiÃ§Ãµes.

----------5Âº Executamos o JsonServer na nossa dB com o comando:
    json-server --watch NomeDaSuaDb.json

----------6Âº Trocamos o "test" no objeto de "scrips" do package.json, pra:
    "dev": "json-server --watch NomeDaSuaDb.json --port 3333"

----------7Âº Adicionamos um server.js na pasta raiz com o cÃ³digo (DENTRO das aspas):
    "
    const jsonServer = require("json-server");
    const server = jsonServer.create();
    const router = jsonServer.router("NomeDaSuaDb.json");
    const middlewares = jsonServer.defaults();
    const port = process.env.PORT || 3000;

    server.use(middlewares);
    server.use(router);

    server.listen(port);
    "

8Âº Fazemos o deploy pro Heroku sem mistÃ©rio, e PRONTO!!! 
acessamos nossa API Rest tranquilo!! ðŸ¤©ðŸ˜ŽðŸ˜‰ Podendo fazer qualquer tipo
de requisiÃ§Ãµes CRUD -> Post/Get/Put/Delete